-- Check to make sure data load properly.
select * from PortfolioProject1..CovidDeaths
order by 3,4


-- In Canada, what percentage of people died after being infected with covid.
select location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
from PortfolioProject1..CovidDeaths
where location like 'Canada'
order by 1,2


-- In Canada, what percentage of the population got covid.
select location, date, total_cases, population, (total_cases/population)*100 as InfectPercentage
from PortfolioProject1..CovidDeaths
where location like 'Canada'
order by 1,2


-- Death rate for each country, ranked highest to lowest.
select location, MAX(total_deaths) as MaxDeaths, population, MAX((total_deaths/population))*100 as DeathPercentage
from PortfolioProject1..CovidDeaths
where continent is not null
group by location, population
order by MaxDeaths desc


-- Total deaths for locations that aren't countries, which includes areas encompassing more than one country and for various income levels. 
select location, MAX(total_deaths) as MaxDeaths
from PortfolioProject1..CovidDeaths
where continent is null
group by location
order by MaxDeaths desc


-- Countries ranked from highest to lowest percentage of population that got infected by covid.
Select Location, Population, MAX(total_cases) as HighestInfectionCount,  Max(total_cases)/population*100 as PercentPopulationInfected
From PortfolioProject1..CovidDeaths
where location not like '%Income%' and continent is not null
Group by Location, Population
order by PercentPopulationInfected desc


-- Global numbers for total cases, total deaths, and percentage of deaths per day. 
select date, SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, SUM(cast(new_deaths as int))/SUM(nullif(new_cases,0))*100 as DeathPercentage
from PortfolioProject1..CovidDeaths
where continent is not null
group by date
order by 1,2


-- Join two tables by location and date columns.
Select *
from PortfolioProject1..CovidDeaths dea
join PortfolioProject1..CovidVaccinations vac
	on dea.location = vac.location
	and dea.date = vac.date


-- Join two tables by location and date, show below columns in order by location and date, and create new column for a running total for number of people vaccinated.
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, sum(convert(bigint, vac.new_vaccinations)) OVER (partition by dea.location order by dea.location, dea.date) 
as RollingVaccinated
from PortfolioProject1..CovidDeaths dea
join PortfolioProject1..CovidVaccinations vac
	on dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null
order by 2,3


-- Create the temporary table PopvsVac, and create/calculate the column to keep track of total number of vaccinated people. 
-- In the main select query, calls the temperary table and adds new column calculating percent of population vaccincated for each day.
with PopvsVac (Continent, Location, Date, Population, New_Vaccinations, RollingVaccinated)
as
(
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, sum(convert(bigint, vac.new_vaccinations)) OVER (partition by dea.location order by dea.location, dea.date)
as RollingVaccinated -- sum all new vaccinations by location, chronological order
from PortfolioProject1..CovidDeaths dea
join PortfolioProject1..CovidVaccinations vac
	on dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null
)
select *, (RollingVaccinated/Population)*100 as PercentPopVacd
from PopvsVac


-- Create a new table PercentPopVaccd and basically creates the same view as the previous query.
-- The newly created table is not temperary, and still exists after all select queries.
drop table if exists #PercentPopVaccd
create table #PercentPopVaccd
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population bigint,
New_Vaccinations bigint,
RollingVaccinated bigint,
)
Insert into #PercentPopVaccd

Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, sum(convert(bigint, vac.new_vaccinations)) OVER (partition by dea.location order by dea.location, dea.date) 
as RollingVaccinated 
from PortfolioProject1..CovidDeaths dea
join PortfolioProject1..CovidVaccinations vac
	on dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null

select *, (RollingVaccinated/Population)*100 as PercentPopVacd
from #PercentPopVaccd


/*
**************** QUERIES USED FOR TABLEAU DASHBOARD ****************
*/

-- Tableau Table 1 - Global Numbers; total cases, total deaths, and death percentage as of early March 2023
select SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, SUM(cast(new_deaths as int))/SUM(nullif(new_cases,0))*100 as DeathPercentage
from PortfolioProject1..CovidDeaths
where continent is not null

-- Tableau Table 2 - Total Deaths Per Continent
select location, MAX(total_deaths) as MaxDeaths
from PortfolioProject1..CovidDeaths
	where location not like '%Income%' and 
	location not like '%World%' and
	location not like '%Union%' and
	continent is null
group by location
order by MaxDeaths desc

-- Tableau Table 3 - Percent Population Infected Per Country
select location, MAX(total_cases) as MaxInfection, population, MAX((total_cases/population))*100 as InfectPercentage
from PortfolioProject1..CovidDeaths
where continent is not null
group by location, population
order by InfectPercentage desc

-- Tableau Table 4 - Percent Population Infected (over time)
select location, date, MAX(total_cases) as MaxInfection, population, MAX((total_cases/population))*100 as InfectPercentage
from PortfolioProject1..CovidDeaths
where continent is not null
group by location, population, date
order by InfectPercentage desc
